name: Build and Publish Containers

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'  

env:
  GITHUB_IMAGE: ozy-viking/python-nginx
  DOCKER_IMAGE: ozyviking/python-nginx
  REGISTRY: ghcr.io
  MAIN_NGINX: "mainline"
  MAIN_PYTHON: "3.11"
  MAIN_OS: "bookworm"
permissions:
  contents: write
  packages: write

jobs:
  build:
    strategy:
      matrix:
        nginx: [mainline, stable]
        os: [bookworm, alpine, bullseye]
        python: ["3.11", "3.10", "3.9"]
        exclude:
          - nginx: stable
            os: bookworm
          - nginx: mainline
            os: bullseye
          - os: alpine
    runs-on: ubuntu-latest
  
    steps:
      - name: "Checkout Branch: ${{ github.ref_name }}"
        id: build_checkout
        uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          poetry config virtualenvs.create false
          poetry install

      - name: Make dockerfiles
        run: makedocker --python ${{ matrix.python }} --nginx ${{ matrix.nginx }} --os ${{ matrix.os }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ozyviking
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Container Meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{env.REGISTRY}}/${{env.GITHUB_IMAGE}}
            ${{env.DOCKER_IMAGE}}
          tags: |
            latest
            ${{ ((matrix.os == env.MAIN_OS)&&(matrix.nginx == env.MAIN_NGINX)) && matrix.python }}
            ${{ ((matrix.nginx == env.MAIN_NGINX)&&(matrix.python == env.MAIN_PYTHON)) && matrix.os }}
            ${{ ((matrix.os == env.MAIN_OS)&&(matrix.python == env.MAIN_PYTHON)) && matrix.nginx }}
            ${{ matrix.python }}-${{ matrix.nginx }}-${{ matrix.os }}
      
      - name: check output
        run: echo "${{steps.meta.outputs.tags}}"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build container and push
        uses: docker/build-push-action@v4
        with:
          push: true
          context: build/${{ matrix.nginx }}/${{ matrix.os }}/${{ matrix.python }}
          tags: |
            ${{ steps.meta.outputs.tags }}
